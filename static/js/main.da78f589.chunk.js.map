{"version":3,"sources":["firebase.js","TodoContext.js","Todo.js","NewTodoForm.js","TodoList.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","TodoContext","createContext","TodoProvider","props","useState","task","todo","setTodo","todos","setTodos","Provider","value","children","Todo","className","completed","onClick","evt","toggleCompleted","id","console","log","docId","removeTodo","NewTodoForm","useContext","handleChange","target","name","uuid","Date","toLocaleString","onSubmit","preventDefault","submit","htmlFor","type","placeholder","onChange","required","TodoList","filter","firestore","collection","doc","delete","updatedTodos","map","useEffect","orderBy","onSnapshot","snapshot","newTodos","docs","data","change","add","key","date","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da78f589.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\n// import 'firebase/auth';\r\n// import 'firebase/firebase-firestore'\r\n\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyBBDasXixm2a6aIayZMdLKQpSf8x2PETJI\",\r\n    authDomain: \"todolist-dac5f.firebaseapp.com\",\r\n    databaseURL: \"https://todolist-dac5f.firebaseio.com\",\r\n    projectId: \"todolist-dac5f\",\r\n    storageBucket: \"todolist-dac5f.appspot.com\",\r\n    messagingSenderId: \"982083472438\",\r\n    appId: \"1:982083472438:web:76a23069a7c21f98e55c97\",\r\n    measurementId: \"G-MH5DR3KX7V\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n//   firebase.analytics();\r\n\r\nexport default firebase;\r\n\r\n","import React, {createContext, useState} from 'react';\r\n\r\nexport const TodoContext = createContext();\r\n\r\nexport function TodoProvider(props){\r\n    const [todo, setTodo] = useState({task: ''});\r\n    const [todos, setTodos] = useState([\r\n        // {task: 'shopping go to shopping tomorrow in town and having dinner', id: 1, completed: false},\r\n        // {task: 'hiking', id: 2, completed: false}\r\n    ]);\r\n\r\n    return(\r\n        <TodoContext.Provider value={{todo, setTodo, todos, setTodos}}>\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    )\r\n}","import React from 'react';\r\n\r\nfunction Todo (props){\r\n\r\n    function handleRemove(){\r\n        console.log(props.id)\r\n        console.log(props.docId)\r\n        props.removeTodo(props.docId)\r\n    }\r\n\r\n    function handleToggle (evt) {\r\n        props.toggleCompleted(props.id)\r\n    }\r\n\r\n    return(\r\n        <div className=\"Todo\">\r\n            <li className={props.completed? \"completed\" : \"\"} onClick={handleToggle}>{props.task}</li>\r\n            <button onClick={handleRemove}>X</button>\r\n        </div>     \r\n    )\r\n}\r\n\r\nexport default Todo;","import React, { useContext } from 'react';\r\nimport {v1 as uuid} from \"uuid\"; \r\n\r\nimport {TodoContext} from './TodoContext';\r\n\r\nfunction NewTodoForm (props) {\r\n\r\n    const { todo, setTodo } = useContext(TodoContext);\r\n\r\n    // function handleChange (evt){\r\n    //     setTodo({\r\n    //         [evt.target.name] : evt.target.value, \r\n    //         id: uuid(),\r\n    //         completed: false,\r\n    //     });\r\n    // }\r\n    // function handleSubmit (evt){\r\n    //     evt.preventDefault();\r\n    //     setTodos([...todos, todo])\r\n    //     setTodo({task: ''})\r\n    // }\r\n\r\n    function handleChange (evt) {\r\n        setTodo({\r\n            [evt.target.name] : evt.target.value, \r\n            id: uuid(),\r\n            completed: false,\r\n            date: new Date().toLocaleString('en-US')\r\n        })\r\n    }\r\n    function handleSubmit (evt) {\r\n        evt.preventDefault();\r\n        props.submit(todo);\r\n        setTodo({task: ''})\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <label htmlFor='task'></label>\r\n            <input \r\n                type='text' \r\n                placeholder='add task' \r\n                id='task' \r\n                name='task'\r\n                onChange={handleChange}\r\n                onClick={handleChange}\r\n                value={todo.task}\r\n                required\r\n            />\r\n            <button>Add Todo</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewTodoForm;","import React, {useContext, useEffect} from 'react';\r\nimport {v1 as uuid} from \"uuid\"; \r\nimport firebase from \"./firebase\";\r\n\r\nimport {TodoContext} from './TodoContext';\r\nimport Todo from './Todo';\r\nimport NewTodoForm from './NewTodoForm';\r\n\r\n\r\nfunction TodoList() {\r\n  const { setTodo, todos, setTodos } = useContext(TodoContext);\r\n\r\n  useEffect(()=>{\r\n    firebase\r\n    .firestore()\r\n    .collection(\"TodoList\")\r\n    .orderBy(\"todo.date\")\r\n    .onSnapshot((snapshot)=>{\r\n      // debugger\r\n      const newTodos=snapshot.docs.map((doc)=>({\r\n        docId: doc.id,\r\n        ...doc.data().todo\r\n      }))\r\n      setTodos(newTodos)\r\n    })\r\n  }, [])\r\n\r\n  function change (evt){\r\n    setTodo({\r\n        [evt.target.name] : evt.target.value, \r\n        id: uuid(),\r\n        completed: false,\r\n    });\r\n}\r\n\r\nfunction submit (todo){\r\n    setTodos([...todos, todo]);\r\n\r\n    firebase\r\n    .firestore()\r\n    .collection('TodoList')\r\n    .add({\r\n      todo\r\n    })\r\n}\r\n\r\n  function removeTodo(docId){\r\n    setTodos(todos.filter(todo=>todo.docId !== docId))  \r\n\r\n    firebase\r\n    .firestore()\r\n    .collection(\"TodoList\")\r\n    .doc(docId)\r\n    .delete();\r\n  }\r\n\r\n  function toggleCompleted (id) {\r\n    const updatedTodos = todos.map(todo=>{\r\n      if(todo.id === id) {\r\n        return {...todo, completed: !todo.completed}\r\n      }   \r\n      return todo;   \r\n    })\r\n    setTodos(updatedTodos)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"TodoList\">\r\n        <h1>Todo List</h1>\r\n        <NewTodoForm change={change} submit={submit} />\r\n            <ul>\r\n              {todos.map(todo=>\r\n                <Todo \r\n                  task={todo.task} \r\n                  key={todo.id} \r\n                  id={todo.id} \r\n                  docId={todo.docId}\r\n                  removeTodo={removeTodo}\r\n                  completed={todo.completed}\r\n                  toggleCompleted={toggleCompleted}\r\n                  date={todo.date}\r\n                />\r\n              )}\r\n            </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\nimport './App.scss';\n\nimport TodoList from './TodoList';\nimport {TodoProvider} from './TodoContext';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoProvider>\n        <TodoList/> \n      </TodoProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}